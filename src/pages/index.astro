---
import BaseLayout from "@layouts/BaseLayout.astro";
import Container from "@components/Container.astro";
import Card from "@components/Card.astro";
import H1 from "@components/Heading1.astro";
import { getCollection } from "astro:content";
import BlogPost from "@components/BlogPost.astro";

const pageTitle = "Home";
const { frontmatter } = Astro.props;
const allPosts = await getCollection("posts");

const eagerLoadCount = 3;
---

<BaseLayout>
  <Container>
    <p>
      I'm Jason, a technical writer and software developer living in the Indianapolis area. Welcome to my personal site. Here is where I write about my experiences and thoughts on technical writing, software development, and other topics.
    </p>
    <Card>
      <h3
        class="mt-0 mb-3 text-2xl font-bold my-6"
      >
        Topics I'm interested in
      </h3>
      <ul class="my-3 ml-4 text-md list-disc">
        <li class="mb-1">API docs and tools</li>
        <li class="mb-1">Advanced docs-as-code workflows</li>
        <li class="mb-1">Developer experience: integrating docs into dev workflows</li>
        <li class="mb-1">Creating content models for developer portals</li>
        <li class="mb-1">Writing for global teams and audiences</li>
        <li class="mb-1">Advanced analytics for technical docs</li>
        <li class="mb-1">Advanced diagramming tools and techniques</li>
        <li class="mb-1">Managing legacy docs</li>
      </ul>
    </Card>
    <section class="flex-col justify-center items-center mt-20 mx-auto">
      <ul class="space-y-4 w-full" aria-label="Articles">
        {
          allPosts.map((post, index) => (
            <li>
              <a
                href={`/posts/${post.slug}/`}
                aria-label={`Read ${post.data.title}${post.data.description ? ` - ${post.data.description}` : ""}`}
                class="relative group flex flex-nowrap p-4 rounded-lg shadow-md selection:border border-opacity-70  hover:border-opacity-10 hover:bg-primary hover:bg-opacity-10 transition-colors duration-300 ease-in-out"
              >
                <div class="flex flex-col flex-1 truncate pr-8">
                  <div class="font-semibold text-lg">{post.data.title}</div>
                  {post.data.description && (
                    <div class="text-sm">{post.data.description}</div>
                  )}
                </div>
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  viewBox="0 0 24 24"
                  class="absolute top-1/2 right-4 -translate-y-1/2 w-5 h-5 stroke-2 fill-none stroke-current"
                >
                  <line
                    x1="5"
                    y1="12"
                    x2="19"
                    y2="12"
                    class="translate-x-3 group-hover:translate-x-0 scale-x-0 group-hover:scale-x-100 transition-transform duration-300 ease-in-out"
                  />
                  <polyline
                    points="12 5 19 12 12 19"
                    class="-translate-x-1 group-hover:translate-x-0 transition-transform duration-300 ease-in-out"
                  />
                </svg>
              </a>
            </li>
          ))
        }
      </ul>
    </section>
  </Container>
</BaseLayout>
